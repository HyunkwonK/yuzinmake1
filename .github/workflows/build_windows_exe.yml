name: Build Windows EXE

# main 브랜치에 푸시될 때마다 워크플로우를 실행합니다.
on:
  push:
    branches:
      - main
  # 수동으로 워크플로우를 실행하고 싶을 때 사용
  workflow_dispatch:

jobs:
  build:
    # Windows 최신 환경에서 실행합니다.
    runs-on: windows-latest

    steps:
    # 1. 저장소 코드를 체크아웃합니다.
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Python 3.11 환경을 설정합니다.
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # 3. Chocolatey로 Tesseract와 Ghostscript를 먼저 설치합니다.
    - name: Install Tesseract and Ghostscript
      run: |
        # Chocolatey를 사용하여 시스템 레벨에서 설치
        choco install tesseract ghostscript -y
        # PATH에 Tesseract 추가
        $env:PATH += ";C:\Program Files\Tesseract-OCR"
        echo "C:\Program Files\Tesseract-OCR" >> $env:GITHUB_PATH
        # 설치 확인
        tesseract --version
        gs --version

    # 4. 필요한 Python 라이브러리를 설치합니다.
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # OCR 관련 라이브러리를 먼저 설치
        pip install ocrmypdf
        # 나머지 라이브러리 설치
        pip install pyinstaller pandas openpyxl xlsxwriter requests pdfplumber camelot-py[cv]

    # 5. 환경변수 설정 및 PyInstaller로 .exe 파일을 빌드합니다.
    - name: Build the EXE
      env:
        DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
      run: |
        # 환경변수 확인
        echo "DEEPL_API_KEY가 설정되었는지 확인..."
        if ($env:DEEPL_API_KEY) {
            echo "✓ DEEPL_API_KEY 설정됨 (길이: $($env:DEEPL_API_KEY.Length))"
        } else {
            echo "⚠ DEEPL_API_KEY가 설정되지 않음"
        }
        
        # OCR 도구 확인
        echo "OCR 도구 확인..."
        tesseract --version
        gs --version
        python -c "import ocrmypdf; print('✓ ocrmypdf 사용 가능')"
        
        # PyInstaller로 빌드
        echo "PyInstaller로 빌드 시작..."
        pyinstaller --onefile --console --name "PDF_Translator" test.py
        
        # 생성된 파일 확인
        if (Test-Path "dist\PDF_Translator.exe") {
            echo "✓ EXE 파일이 성공적으로 생성되었습니다."
            Get-Item "dist\PDF_Translator.exe" | Select-Object Name, Length, LastWriteTime
        } else {
            echo "✗ EXE 파일 생성 실패"
            exit 1
        }

    # 6. 생성된 .exe 파일을 아티팩트로 업로드합니다.
    - name: Upload EXE as artifact
      uses: actions/upload-artifact@v4
      with:
        name: PDF-Translator-EXE
        path: dist/PDF_Translator.exe