name: Build Windows EXE

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # 1. Chocolatey를 사용하여 Tesseract와 Ghostscript 설치
    - name: Install Tesseract and Ghostscript via Chocolatey
      run: |
        choco install tesseract ghostscript -y

    # 2. Tesseract가 설치된 경로를 PATH에 추가
    #    Tesseract는 기본적으로 C:\Program Files\Tesseract-OCR에 설치됩니다.
    #    $env:PATH += ";C:\Program Files\Tesseract-OCR" 명령어를 통해 현재 세션의 PATH를 업데이트
    - name: Add Tesseract and Ghostscript to PATH
      run: |
        echo "C:\Program Files\Tesseract-OCR" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
        # Ghostscript 설치 경로를 동적으로 찾아 PATH에 추가
        Get-ChildItem "C:\Program Files\gs" | Where-Object {$_.PSIsContainer} | Select-Object -First 1 | ForEach-Object {
          $gsPath = Join-Path $_.FullName "bin"
          echo $gsPath | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        }
        
    # 3. 설치 및 PATH 추가 확인
    - name: Verify Tesseract and Ghostscript installation
      run: |
        tesseract --version
        
        # Ghostscript 실행 파일 확인
        if (Get-Command gswin64c.exe -ErrorAction SilentlyContinue) {
            gswin64c.exe --version
        } else {
            Write-Host "Ghostscript executable not found in PATH."
            exit 1
        }
    
    # 4. ocrmypdf를 먼저 설치해서 시스템 종속성을 찾도록 함
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # OCR 관련 패키지들을 먼저 설치
        pip install Pillow lxml reportlab
        
        # ocrmypdf의 다양한 옵션으로 설치 시도
        echo "ocrmypdf 설치 중..."
        pip install "ocrmypdf[optimize]" || echo "optimize 옵션 실패"
        pip install "ocrmypdf[watcher]" || echo "watcher 옵션 실패"
        pip install ocrmypdf || echo "기본 설치 실패"
        
        # 추가 OCR 관련 패키지들
        pip install img2pdf reportlab coloredlogs
        
        # 나머지 패키지들 설치
        pip install pyinstaller pandas openpyxl xlsxwriter requests pdfplumber camelot-py[cv]
        
        # ocrmypdf 설치 확인
        echo "ocrmypdf 설치 확인..."
        python -c "import ocrmypdf; print('✓ ocrmypdf version:', ocrmypdf.__version__)"
        python -c "try: import ocrmypdf.data; print('✓ ocrmypdf.data imported successfully'); except Exception as e: print('✗ ocrmypdf.data import failed:', e)"
        python -c "import sys; print('Python path:'); [print(p) for p in sys.path]"

    # 5. PyInstaller로 .exe 파일 빌드
    - name: Build the EXE
      env:
        TESSDATA_PREFIX: "C:\\Program Files\\Tesseract-OCR\\tessdata"
        DEEPL_API_KEY: "b3125acc-3a44-4648-8b4d-5ca8e7350059:fx"
      run: |
        # 환경변수 확인
        echo "DEEPL_API_KEY가 설정되었는지 확인..."
        if ($env:DEEPL_API_KEY) {
            echo "✓ DEEPL_API_KEY 설정됨 (길이: $($env:DEEPL_API_KEY.Length))"
        } else {
            echo "⚠ DEEPL_API_KEY가 설정되지 않음"
        }
        
        # OCR 도구 최종 확인
        echo "OCR 도구 최종 확인..."
        tesseract --version
        python -c "import ocrmypdf; print('✓ ocrmypdf:', ocrmypdf.__version__)"
        
        # Ghostscript 확인 (gswin64c.exe 우선)
        try {
            gswin64c.exe --version
            echo "✓ Ghostscript 사용 가능"
        } catch {
            echo "⚠ Ghostscript을 찾을 수 없지만 계속 진행합니다"
        }
        
        # PyInstaller로 빌드
        echo "PyInstaller로 빌드 시작..."
        
        # ocrmypdf 데이터 경로 확인
        $ocrmypdfPath = python -c "import ocrmypdf, os; print(os.path.dirname(ocrmypdf.__file__))"
        echo "ocrmypdf 경로: $ocrmypdfPath"
        
        # PyInstaller 실행 (ocrmypdf 전체 포함)
        pyinstaller --onefile --console --name "PDF_Translator" `
          --add-data "C:\Program Files\Tesseract-OCR\tessdata;tessdata" `
          --hidden-import "ocrmypdf" `
          --hidden-import "ocrmypdf.data" `
          --hidden-import "ocrmypdf.builtin_plugins" `
          --hidden-import "ocrmypdf.builtin_plugins.optimize" `
          --hidden-import "ocrmypdf.builtin_plugins.tesseract_ocr" `
          --hidden-import "ocrmypdf.builtin_plugins.unpaper" `
          --collect-all "ocrmypdf" `
          test.py
        
        # 생성된 파일 확인
        if (Test-Path "dist\PDF_Translator.exe") {
            echo "✓ EXE 파일이 성공적으로 생성되었습니다."
            Get-Item "dist\PDF_Translator.exe" | Select-Object Name, Length, LastWriteTime
        } else {
            echo "✗ EXE 파일 생성 실패"
            exit 1
        }

    # 6. 생성된 .exe 파일을 아티팩트로 업로드
    - name: Upload EXE as artifact
      uses: actions/upload-artifact@v4
      with:
        name: PDF-Translator-EXE
        path: dist/PDF_Translator.exe